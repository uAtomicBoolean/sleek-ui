import { UAppTheme } from "../app-theme.slint";
import { ButtonInterface } from "button-interface.slint";

import { UText } from "text.slint";
import { UIcon } from "icon.slint";


export component UBreadcrumb inherits Rectangle {
	// Regular properties
    in-out property <[string]> steps: [];
    callback step-clicked(step: string);
    VerticalLayout {
        alignment: center;
        HorizontalLayout {
            spacing: UAppTheme.spacing-medium;
            for step[idx] in steps: HorizontalLayout {
                spacing: UAppTheme.spacing-medium;
                ButtonInterface {
                    UText {
                        text: step;
                        color: idx == steps.length - 1 ? UAppTheme.primary.base : UAppTheme.text-secondary;
                        font-size: UAppTheme.font-size-base;
                        animate color { duration: 200ms; }
                        states [
                            hover when parent.has-hover && idx != steps.length - 1: {
                                color: UAppTheme.text-disabled;
                            }
                        ]
                    }

                    clicked => {
                        step-clicked(step);
                    }
                }

                if idx != steps.length - 1: VerticalLayout {
                    alignment: center;
                    height: 100%;
                    UIcon {
                        source: @image-url("../assets/icons/chevron-right.svg");
                        size: UAppTheme.icon-size-base;
                        colorize: UAppTheme.text-secondary;
                    }
                }
            }
        }
    }
}
