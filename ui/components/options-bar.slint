import { UDivider, USelect, USelectOption } from "../sleek-ui/widgets.slint";
import { UAppTheme } from "../sleek-ui/app-theme.slint";
import { UColorScheme } from "../sleek-ui/app-theme.slint";


export global OptionsBarLogic {
    callback change-color-scheme(color-scheme: UColorScheme);
}

export component OptionsBar inherits Rectangle {
    VerticalLayout {
        HorizontalLayout {
            alignment: space-between;
            padding: UAppTheme.padding-base;
            HorizontalLayout {
                alignment: start;
                spacing: UAppTheme.spacing-base;
                VerticalLayout {
                    alignment: center;
                    USelect {
                        property <[USelectOption]> color-scheme-options: [
                            { text: "Light", value: "light", enabled: true },
                            { text: "Dark", value: "dark", enabled: true },
                            { text: "System", value: "system", enabled: true }
                        ];
                        width: 95px * UAppTheme.scale-factor;
                        current-index: 2;
                        options: color-scheme-options;
                        selected-changed(_) => {
                            if self.selected-value == "light" {
                                OptionsBarLogic.change-color-scheme(UColorScheme.light);
                            } else if self.selected-value == "dark" {
                                OptionsBarLogic.change-color-scheme(UColorScheme.dark);
                            } else {
                                OptionsBarLogic.change-color-scheme(UColorScheme.system);
                            }
                        }
                    }
                }

                Rectangle {
                    Text {
                        text: "Primary color";
                    }
                }
            }

            Rectangle {
                Text {
                    text: "enable widgets";
                }
            }
        }

        UDivider {
            width: 100%;
        }
    }
}
